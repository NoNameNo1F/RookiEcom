@model RookiEcom.FrontStore.ViewModels.ProductsByCategoryViewModel
@{
    ViewData["Title"] = Model.Category?.Name ?? "Products";
    var category = Model.Category;
    var productsResult = Model.Products;
    var currentPage = productsResult?.PageData?.PageNumber ?? Model.CurrentPage;
    var pageSize = productsResult?.PageData?.PageSize ?? Model.PageSize;
    var totalItems = productsResult?.PageData?.TotalCount ?? 0;
    var totalPages = productsResult?.PageData?.TotalPages ?? 0;
}

@if (category != null)
{
    <div class="category-banner">
        @if (!string.IsNullOrEmpty(category.Image))
        {
            <img src="@category.Image" alt="@category.Name" />
        }
        <div>
            <h1>@category.Name</h1>
            @if (!string.IsNullOrEmpty(category.Description))
            {
                <p class="text-muted mb-0 d-none d-md-block">@category.Description</p>
            }
        </div>
    </div>
}

<div class="row mt-4">
    @* 2. Filter Sidebar (Left) *@
    <div class="col-lg-3 filter-sidebar">
        <div class="card">
            <div class="card-header">Filters</div>
            <div class="list-group list-group-flush">
                <a href="#" class="list-group-item list-group-item-action disabled">Price Range (disabled)</a>
                <a href="#" class="list-group-item list-group-item-action disabled">Brand (disabled)</a>
                <a href="#" class="list-group-item list-group-item-action disabled">Color (disabled)</a>
            </div>
        </div>
    </div>

    <div class="col-lg-9">
        <div class="d-flex justify-content-between align-items-center mb-3 bg-light p-2 rounded">
            <span class="text-muted">@totalItems items found</span>
            <div class="d-flex align-items-center">
                 <label for="sortOrder" class="form-label me-2 mb-0 small">Sort by:</label>
                 <select class="form-select form-select-sm" id="sortOrder" style="width: auto;"> @* TODO: Implement sorting logic *@
                    <option selected>Recommended</option>
                    <option value="price_asc">Price: Low to High</option>
                    <option value="price_desc">Price: High to Low</option>
                    <option value="name_asc">Name: A-Z</option>
                    <option value="name_desc">Name: Z-A</option>
                </select>
            </div>
        </div>

        @if (Model.Products?.Items.Any() == true)
        {
            <div class="row row-cols-2 row-cols-md-3 row-cols-xl-4 g-3">
                @foreach (var product in productsResult.Items)
                {
                    <div class="col">
                        @await Html.PartialAsync("_ProductCard", product)
                    </div>
                }
            </div>

            @if (totalPages > 1)
            {
                <nav aria-label="Page navigation" class="mt-4 d-flex justify-content-center">
                    <ul class="pagination">
                        <li class="page-item @(productsResult.PageData?.HasPrevious == false ? "disabled" : "")">
                            <a class="page-link" asp-action="ByCategory" asp-route-categoryId="@category?.Id" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@pageSize">Previous</a>
                        </li>
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")"><a class="page-link" asp-action="ByCategory" asp-route-categoryId="@category?.Id" asp-route-page="@i" asp-route-pageSize="@pageSize">@i</a></li>
                        }
                        <li class="page-item @(productsResult.PageData?.HasNext == false ? "disabled" : "")">
                            <a class="page-link" asp-action="ByCategory" asp-route-categoryId="@category?.Id" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@pageSize">Next</a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="alert alert-info">No products found matching your criteria.</div>
        }
    </div>
</div>